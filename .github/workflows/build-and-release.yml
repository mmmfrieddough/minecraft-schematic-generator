name: Build and Release

on:
  release:
    types: [created]

permissions:
  contents: write
  discussions: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            output_name: minecraft-schematic-generator.exe
            torch_index: cpu
            cuda: false
          - os: ubuntu-latest
            output_name: minecraft-schematic-generator-linux
            torch_index: cpu
            cuda: false
          - os: macos-latest
            output_name: minecraft-schematic-generator-mac
            torch_index: cpu
            cuda: false
          - os: windows-latest
            output_name: minecraft-schematic-generator.exe
            torch_index: cu124
            cuda: true
          - os: ubuntu-latest
            output_name: minecraft-schematic-generator-linux
            torch_index: cu124
            cuda: true

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install PyTorch
        run: |
          python -m pip install --upgrade pip
          pip install torch --index-url https://download.pytorch.org/whl/${{ matrix.torch_index }}

      - name: Install PyInstaller and dependencies
        run: |
          pip install -e .[server]
          pip install pyinstaller ${{ matrix.cuda && 'huggingface_hub' || '' }}

      - name: Build binary
        run: |
          pyinstaller --onefile --name ${{ matrix.output_name }} --copy-metadata safetensors --collect-data minecraft_schematic_generator app/main.py

      - name: Upload to Hugging Face
        if: matrix.cuda
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          python -c "
          from huggingface_hub import HfApi
          api = HfApi()

          api.upload_file(
              path_or_fileobj='dist/${{ matrix.output_name }}',
              path_in_repo=f'binaries/${{ matrix.output_name }}',
              repo_id='mmmfrieddough/minecraft-schematic-generator',
              token='${{ secrets.HF_TOKEN }}'
          )
          "

      - name: Upload artifact
        if: ${{ !matrix.cuda }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.output_name }}
          path: dist/${{ matrix.output_name }}

  create-release-tag:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install huggingface-hub
        run: |
          python -m pip install --upgrade pip
          pip install huggingface-hub

      - name: Create HF Tag
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          python -c "
          from huggingface_hub import HfApi
          api = HfApi()

          api.create_tag(
              repo_id='mmmfrieddough/minecraft-schematic-generator',
              tag='${{ github.ref_name }}',
              token='${{ secrets.HF_TOKEN }}'
          )
          "

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            ## Download Options

            ### CUDA Version (Recommended)
            For optimal performance on Windows and Linux, download the CUDA-enabled version (hosted on Hugging Face due to file size limits):
            - [Windows CUDA](https://huggingface.co/mmmfrieddough/minecraft-schematic-generator/resolve/${{ github.ref_name }}/binaries/minecraft-schematic-generator.exe)
            - [Linux CUDA](https://huggingface.co/mmmfrieddough/minecraft-schematic-generator/resolve/${{ github.ref_name }}/binaries/minecraft-schematic-generator-linux)

            **Note:** CUDA version requires an NVIDIA GPU but provides significantly faster inference.

            ### CPU Version
            Systems without an NVIDIA GPU can use the CPU version. Select the appropriate download from the assets list below.

            ## System Requirements
            - Windows/Linux: NVIDIA GPU strongly recommended
            - macOS: Apple Silicon recommended for best performance

            ## Custom Configuration
            The program can be opened by simply double clicking, or for custom options can be started with:
            ```bash
            ./minecraft-schematic-generator [options]
            ```

            By default, it will run on http://localhost:8000 (Craftpilot will connect to this address).
          draft: false
          prerelease: false
          files: |
            dist/minecraft-schematic-generator*/minecraft-schematic-generator*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
